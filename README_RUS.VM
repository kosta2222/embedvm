Адресное пространство и длина слова
-----------------------------------
Машина может адресовать до 64к памяти(память размером 65_536 байт)
Память может быть адресована блоками(units) 1 им байтом(single bytes),
но локальные переменные всегда 16битные слова.
 Машина оперирует 16битными словами,которые интерпритируются как 'подписанные',
знаковыми (signed) целые(integers).
 Память всегда используется с reader/writer функциями,которые
обеспечиваются host окружением.
 Все 16битные операции с памятью выполняются в больше-конечном(big-endian)
порядке.

Состояние машины
----------------
Состояние машины управляются 3-мя переменными переменными
состояния:
 IP(Указатель инструкций)
-адрес следующей инстркции, котороя должна быть выполнена.
 SP(Указатель стека)
-адрес последнего слова,которое втолкнули в стек.
 SFP(Stack Frame Pointer- указатель рамки,фрейма стека)
-адрес пернвой переменной в стеке

 Также есть (3) указателя на функции в компоненте машины
в host окружении ,reader/writer для доступа к памяти и
callback для вызова пользовательских функций.
Стек
----
Стек растет из высшего адреса к низшим адресам.
Каждая локальная переменная имеет доступ используя SFA(Указатель на рамку,фрейм в стеке)
(SFA- стек фрейм адрес)
 SFA>=0 ? SFP-2*SFA-2: SFP-2*SFA+2*SFA

В стек фрейме (рамке) максимум из 32 локальных переменных для функции(аргументы
имеет отрицательных SFA)
 Вычисления (calculations) делаются в стек-машина-манере.Каждая
операция снимает(pops) свои операнды со стека и ложит (pushes) 
результат на вверх стека.

 Адрес возврата для текущей функции хранятся в 16битном слове
(2 байта) на SFP+2 и родительском указатели рамки(parent stack frame pointer)
по адресу SFP+4
 Все переменные на стеке должны быть выравнены ровно по адресам(even addresses)
Так указатель стека должен быть инициализирован ровно по адрессам
(LSB -младший 'знаковый' бит,не установлен-(LSB not set))